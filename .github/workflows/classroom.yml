name: GitHub Classroom Workflow
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push images
        run: |
          docker compose push
  
  deploy:
    name: Deploy to Minikube
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          minikube start --driver=docker
          kubectl cluster-info

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/

      - name: Configure Ingress with Static IP
        run: |
          echo '
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: gateway-ingress
            namespace: default
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
              nginx.ingress.kubernetes.io/static-ip: "192.168.49.100"
          spec:
            ingressClassName: nginx
            rules:
            - http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: gateway-service
                      port:
                        number: 8080
          ' | kubectl apply -f -

      - name: Restart Deployments
        run: |
          kubectl rollout restart deployment/gateway-service
          kubectl rollout restart deployment/loyalty-service
          kubectl rollout restart deployment/payment-service
          kubectl rollout restart deployment/reservation-service
  
      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl get services
          
  test:
    name: Test
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Wait 10s
      id: delay
      run: sleep 10s  

    - name: Run API Tests
      uses: matt-ball/newman-action@master
      with:
        collection: v2/postman/collection.json
        environment: v2/postman/environment.json
        delayRequest: 100
        reporters: '[ "cli" ]'

    - uses: education/autograding@v1
      id: autograder
      continue-on-error: true