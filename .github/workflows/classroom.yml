name: GitHub Classroom Workflow
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Build images
        timeout-minutes: 10
        run: docker compose build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push images
        run: |
          docker compose push
  
  deploy:
    name: Deploy to Minikube
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          minikube start --driver=docker
          kubectl cluster-info

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/

      - name: Restart Deployments
        run: |
          kubectl rollout restart deployment/gateway-service
          kubectl rollout restart deployment/loyalty-service
          kubectl rollout restart deployment/payment-service
          kubectl rollout restart deployment/reservation-service
  
      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl get services
          
  test:
    name: Test
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Wait 10s
      id: delay
      run: sleep 10s  

    - name: Get Minikube IP
      id:   minikube-ip
      run: |
        echo "::set-output name=ip::$(minikube ip)"
        
    - name: Print Minikube IP
      run: | 
        echo "Minikube IP: ${{ steps.minikube-ip.outputs.ip }}"
    
    - name: Prepare Postman Environment
      run: |
        MINIKUBE_IP=$(minikube ip)  # Получаем IP
        jq --arg minikube_ip "http://$MINIKUBE_IP" \
           '.values[] |= if .key == "serviceUrl" then .value = $minikube_ip else . end' \
           v2/postman/environment.json > updated_environment.json
    
    - name: Run API Tests
      uses: matt-ball/newman-action@master
      with:
        collection: v2/postman/collection.json
        environment: updated_environment.json
        delayRequest: 100
        reporters: '[ "cli" ]'
    